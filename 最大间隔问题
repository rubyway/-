#给定数组 a，求下标对 i, j 满足 a[i] <= a[j]，并且 j - i 最大
#http://wdxtub.com/interview/14520595473642.html
#http://mars914.iteye.com/blog/1667259
#solution 1
def maxinter(aList):
    length = len(aList)
    premin, sufmax = [], []
    for i in xrange(length- 1):
        premin.append(min(aList[:i+ 1]))
    #premin.append(min(aList))
    #[5, 2, 2, 1, 1, 0, 0]
    """best = 0
    for j in xrange(length- 1, best, -1):
        while j> best and aList[j]>= premin[j- best- 1]:
            best += 1
    return best"""
    for j in xrange(1, length):
        sufmax.append(max(aList[j:]))
    #return max(sufmax)- min(premin)
    best = 0
    for k in xrange(length- 2):
        temp = sufmax[k]- premin[k]
        if best < temp:
            best = temp
    return best
print maxinter([5,2,4,1,8,0,12])
#solution 2
"""
令b[j] = a[j + 1] - a[j]，
那么a[j] - a[i]=(a[i+1]-a[i])+(a[i+2]-a[i+1])+...+(a[j]-a[i-1])
                   = b[i] +b[i+1]+ ...+ b[j - 1]，
即将问题转化成求一个数组子序列的最大值。这个过程的算法是有O(n)的算法的。
"""
def maxinter(aList):
    length = len(aList)
    diffList = []
    for i in xrange(1, length):
        diffList.append(aList[i]- aList[i- 1])
    return consecmax(diffList)
def consecmax(aList):
    length = len(aList)
    tempsum = float("-inf")
    tempmax = float("-inf")
    for i in xrange(length):
        if tempsum + aList[i] < aList[i]:
            tempsum = aList[i]
        else:
            tempsum += aList[i]
        if tempmax < tempsum:
            tempmax = tempsum
    return tempmax
print maxinter([5,2,4,1,8,0,12])
